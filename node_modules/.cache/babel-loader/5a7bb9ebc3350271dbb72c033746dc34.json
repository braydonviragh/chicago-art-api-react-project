{"ast":null,"code":"var _jsxFileName = \"/Users/braydonviragh/Sites/personal/React_Redux_Tutorial/src/containers/Pagination.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchArtworkPage, setCurrentPage } from '../redux/actions/paginationActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    currentPage,\n    totalPages\n  } = useSelector(state => state.pagination);\n\n  const handlePageChange = page => {//dispatch(setCurrentPage(page));\n    //dispatch(fetchArtworkPage(page));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handlePageChange(currentPage - 1),\n      disabled: currentPage === 1,\n      children: \"Prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: currentPage,\n      onChange: e => handlePageChange(e.target.value),\n      children: [...Array(totalPages)].map((_, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: i + 1,\n        children: i + 1\n      }, i + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handlePageChange(currentPage + 1),\n      disabled: currentPage === totalPages,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Pagination, \"ghTnif8tcbRR1CCUnZQ0eblGGQg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/Users/braydonviragh/Sites/personal/React_Redux_Tutorial/src/containers/Pagination.js"],"names":["React","useDispatch","useSelector","fetchArtworkPage","setCurrentPage","Pagination","dispatch","currentPage","totalPages","state","pagination","handlePageChange","page","e","target","value","Array","map","_","i"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,oCAAjD;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA8BN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,UAAlB,CAA/C;;AAEA,QAAMC,gBAAgB,GAAIC,IAAD,IAAU,CACjC;AACA;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAMD,gBAAgB,CAACJ,WAAW,GAAG,CAAf,CAAvC;AAA0D,MAAA,QAAQ,EAAEA,WAAW,KAAK,CAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAQ,MAAA,KAAK,EAAEA,WAAf;AAA4B,MAAA,QAAQ,EAAGM,CAAD,IAAOF,gBAAgB,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAA7D;AAAA,gBACG,CAAC,GAAGC,KAAK,CAACR,UAAD,CAAT,EAAuBS,GAAvB,CAA2B,CAACC,CAAD,EAAIC,CAAJ,kBAC1B;AAAoB,QAAA,KAAK,EAAEA,CAAC,GAAG,CAA/B;AAAA,kBACGA,CAAC,GAAG;AADP,SAAaA,CAAC,GAAG,CAAjB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAJF,eAWE;AAAQ,MAAA,OAAO,EAAE,MAAMR,gBAAgB,CAACJ,WAAW,GAAG,CAAf,CAAvC;AAA0D,MAAA,QAAQ,EAAEA,WAAW,KAAKC,UAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA1BD;;GAAMH,U;UACaJ,W,EACmBC,W;;;KAFhCG,U;AA4BN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchArtworkPage, setCurrentPage } from '../redux/actions/paginationActions';\n\nconst Pagination = () => {\n  const dispatch = useDispatch();\n  const { currentPage, totalPages } = useSelector((state) => state.pagination);\n\n  const handlePageChange = (page) => {\n    //dispatch(setCurrentPage(page));\n    //dispatch(fetchArtworkPage(page));\n  };\n\n  return (\n    <div>\n      <button onClick={() => handlePageChange(currentPage - 1)} disabled={currentPage === 1}>\n        Prev\n      </button>\n      <select value={currentPage} onChange={(e) => handlePageChange(e.target.value)}>\n        {[...Array(totalPages)].map((_, i) => (\n          <option key={i + 1} value={i + 1}>\n            {i + 1}\n          </option>\n        ))}\n      </select>\n      <button onClick={() => handlePageChange(currentPage + 1)} disabled={currentPage === totalPages}>\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}