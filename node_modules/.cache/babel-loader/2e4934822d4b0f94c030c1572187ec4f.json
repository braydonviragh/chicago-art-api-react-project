{"ast":null,"code":"import { ActionTypes } from \"../constants/action-types\";\nimport artAPI from \"../../api/artAPI\";\n\n//Actions / Getters\nexport const fetchProducts = (page = 1, limit = 25) => async (dispatch, getState) => {\n  try {\n    const {\n      currentSearchQuery\n    } = getState().allProducts;\n    const endpoint = currentSearchQuery ? `/artworks/search?q=${currentSearchQuery}&page=${page}&limit=${limit}&fields=id,title,image_id,artist_title` : `/artworks?page=${page}&limit=${limit}&fields=id,title,image_id,artist_title`;\n    const response = await artAPI.get(endpoint);\n    dispatch({\n      type: ActionTypes.FETCH_PRODUCTS,\n      payload: response.data.data\n    });\n    dispatch({\n      type: ActionTypes.RECEIVE_ARTWORK_PAGE,\n      payload: response.data\n    });\n  } catch (error) {\n    console.error('Error fetching products:', error);\n    dispatch({\n      type: ActionTypes.FETCH_PRODUCTS_ERROR,\n      payload: error.message\n    });\n  }\n};\nexport const setPageLimit = pageLimit => {\n  return {\n    type: ActionTypes.SET_PAGE_LIMIT,\n    payload: pageLimit\n  };\n};\nexport const searchArtwork = (query, page = 1, limit = 25) => async dispatch => {\n  const response = await artAPI.get(`/artworks/search?q=${query}&page=${page}&limit=${limit}&&fields=id,title,image_id,artist_title`);\n  dispatch({\n    type: ActionTypes.SEARCH_ARTWORK,\n    payload: response.data.data\n  });\n  dispatch({\n    type: ActionTypes.RECEIVE_ARTWORK_PAGE,\n    payload: response.data\n  });\n  dispatch({\n    type: ActionTypes.SET_SEARCH_QUERY,\n    payload: query\n  });\n};\nexport const fetchCollectionDetail = artId => async dispatch => {\n  const response = await artAPI.get(`/artworks/${artId}`);\n  dispatch({\n    type: ActionTypes.FETCH_DETAILS,\n    payload: response.data.data\n  });\n};\nexport const setProducts = products => {\n  return {\n    type: ActionTypes.SET_PRODUCTS,\n    payload: products\n  };\n};\nexport const setProductFavourites = favourites => {\n  return {\n    type: ActionTypes.SET_PRODUCT_FAVOURITES,\n    payload: favourites\n  };\n};\nexport const selectedProduct = product => {\n  return {\n    type: ActionTypes.SELECTED_PRODUCT,\n    payload: product\n  };\n};\nexport const removeSelectedProduct = () => {\n  return {\n    type: ActionTypes.REMOVE_SELECTED_PRODUCT\n  };\n};\nexport const favouriteToggle = selectedProduct => {\n  return {\n    type: ActionTypes.SET_REMOVE_TOGGLE,\n    payload: selectedProduct\n  };\n};\nexport const setFavouritesPage = page => {\n  return {\n    type: ActionTypes.SET_FAVOURITES_PAGE,\n    payload: page\n  };\n};\nexport const setFavouritesPageLimit = limit => {\n  return {\n    type: ActionTypes.SET_FAVOURITES_PAGE_LIMIT,\n    payload: limit\n  };\n};","map":{"version":3,"names":["ActionTypes","artAPI","fetchProducts","page","limit","dispatch","getState","currentSearchQuery","allProducts","endpoint","response","get","type","FETCH_PRODUCTS","payload","data","RECEIVE_ARTWORK_PAGE","error","console","FETCH_PRODUCTS_ERROR","message","setPageLimit","pageLimit","SET_PAGE_LIMIT","searchArtwork","query","SEARCH_ARTWORK","SET_SEARCH_QUERY","fetchCollectionDetail","artId","FETCH_DETAILS","setProducts","products","SET_PRODUCTS","setProductFavourites","favourites","SET_PRODUCT_FAVOURITES","selectedProduct","product","SELECTED_PRODUCT","removeSelectedProduct","REMOVE_SELECTED_PRODUCT","favouriteToggle","SET_REMOVE_TOGGLE","setFavouritesPage","SET_FAVOURITES_PAGE","setFavouritesPageLimit","SET_FAVOURITES_PAGE_LIMIT"],"sources":["C:/Users/Braydon/Documents/sites/chicago-art-api-react-project/src/redux/actions/productsActions.js"],"sourcesContent":["import { ActionTypes } from \"../constants/action-types\";\r\nimport artAPI from \"../../api/artAPI\";\r\n\r\n//Actions / Getters\r\nexport const fetchProducts = (page = 1, limit = 25) => async (dispatch, getState) => {\r\n    try {\r\n        const { currentSearchQuery } = getState().allProducts;\r\n        const endpoint = currentSearchQuery \r\n          ? `/artworks/search?q=${currentSearchQuery}&page=${page}&limit=${limit}&fields=id,title,image_id,artist_title`\r\n          : `/artworks?page=${page}&limit=${limit}&fields=id,title,image_id,artist_title`;\r\n        const response = await artAPI.get(endpoint);\r\n        dispatch({type: ActionTypes.FETCH_PRODUCTS, payload: response.data.data});\r\n        dispatch({type: ActionTypes.RECEIVE_ARTWORK_PAGE, payload: response.data});\r\n    } catch (error) {\r\n        console.error('Error fetching products:', error);\r\n        dispatch({type: ActionTypes.FETCH_PRODUCTS_ERROR, payload: error.message});\r\n    }\r\n}\r\n\r\nexport const setPageLimit = (pageLimit) => {\r\n  return {\r\n    type: ActionTypes.SET_PAGE_LIMIT,\r\n    payload: pageLimit,\r\n  };\r\n};\r\n\r\nexport const searchArtwork = (query, page = 1, limit = 25) => async (dispatch) => {\r\n  const response = await artAPI.get(`/artworks/search?q=${query}&page=${page}&limit=${limit}&&fields=id,title,image_id,artist_title`);\r\n  dispatch({type: ActionTypes.SEARCH_ARTWORK, payload: response.data.data});\r\n  dispatch({type:ActionTypes.RECEIVE_ARTWORK_PAGE, payload: response.data});\r\n  dispatch({type:ActionTypes.SET_SEARCH_QUERY, payload: query});\r\n}\r\n\r\nexport const fetchCollectionDetail = (artId) => async (dispatch) => { \r\n  const response = await artAPI.get(`/artworks/${artId}`);\r\n\r\n  dispatch({type:ActionTypes.FETCH_DETAILS, payload: response.data.data})\r\n}\r\n\r\nexport const setProducts = (products) => {\r\n  return {\r\n    type: ActionTypes.SET_PRODUCTS,\r\n    payload: products,\r\n  };\r\n};\r\n\r\nexport const setProductFavourites = (favourites) => {\r\n    return { \r\n      type: ActionTypes.SET_PRODUCT_FAVOURITES,\r\n      payload: favourites,\r\n    };\r\n};\r\n\r\nexport const selectedProduct = (product) => {\r\n  return {\r\n    type: ActionTypes.SELECTED_PRODUCT,\r\n    payload: product,\r\n  };\r\n};\r\nexport const removeSelectedProduct = () => {\r\n  return {\r\n    type: ActionTypes.REMOVE_SELECTED_PRODUCT,\r\n  };\r\n};\r\n\r\nexport const favouriteToggle = (selectedProduct) => {\r\n  return {\r\n    type: ActionTypes.SET_REMOVE_TOGGLE,\r\n    payload: selectedProduct,\r\n  };\r\n}\r\n\r\nexport const setFavouritesPage = (page) => {\r\n  return {\r\n    type: ActionTypes.SET_FAVOURITES_PAGE,\r\n    payload: page,\r\n  };\r\n};\r\n\r\nexport const setFavouritesPageLimit = (limit) => {\r\n  return {\r\n    type: ActionTypes.SET_FAVOURITES_PAGE_LIMIT,\r\n    payload: limit,\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}