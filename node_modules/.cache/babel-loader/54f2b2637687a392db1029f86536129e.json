{"ast":null,"code":"import { ActionTypes } from \"../constants/action-types\";\nconst intialState = {\n  products: [],\n  productDetail: [],\n  productFavourites: [],\n  currentPage: 1,\n  totalPages: 1,\n  pageLimit: 25\n}; //My Setters for Products/Art\n\nexport const productsReducer = (state = intialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case ActionTypes.FETCH_PRODUCTS:\n      return { ...state,\n        products: payload\n      };\n\n    case ActionTypes.RECEIVE_ARTWORK_PAGE:\n      return { ...state,\n        totalPages: payload.pagination.total_pages,\n        currentPage: payload.pagination.current_page\n      };\n\n    case ActionTypes.SET_PAGE_LIMIT:\n      return { ...state,\n        pageLimit: payload\n      };\n\n    case ActionTypes.FETCH_PRODUCT_META:\n      return { ...state,\n        productMeta: payload\n      };\n\n    case ActionTypes.SET_PRODUCTS:\n      return { ...state,\n        products: payload\n      };\n\n    case ActionTypes.SEARCH_ARTWORK:\n      return { ...state,\n        products: payload\n      };\n\n    case ActionTypes.SET_REMOVE_TOGGLE:\n      let newFavourites = [...state.productFavourites];\n\n      if (newFavourites.length == 0) {\n        newFavourites.push(payload);\n      } else {\n        let index = newFavourites.findIndex(item => item.id === payload.id);\n\n        if (index !== -1) {\n          newFavourites.splice(index, 1);\n        } else {\n          newFavourites.push(payload);\n        }\n      }\n\n      if (localStorage.getItem(\"productFavourites\")) {\n        localStorage.removeItem(\"productFavourites\");\n      }\n\n      localStorage.setItem(\"productFavourites\", JSON.stringify(newFavourites));\n      return { ...state,\n        productFavourites: newFavourites\n      };\n\n    case ActionTypes.SET_PRODUCT_FAVOURITES:\n      console.log(payload);\n      return { ...state,\n        productFavourites: payload\n      };\n\n    case ActionTypes.FETCH_DETAILS:\n      return { ...state,\n        productDetail: payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/braydonviragh/Sites/personal/React_Redux_Tutorial/src/redux/reducers/productsReducer.js"],"names":["ActionTypes","intialState","products","productDetail","productFavourites","currentPage","totalPages","pageLimit","productsReducer","state","type","payload","FETCH_PRODUCTS","RECEIVE_ARTWORK_PAGE","pagination","total_pages","current_page","SET_PAGE_LIMIT","FETCH_PRODUCT_META","productMeta","SET_PRODUCTS","SEARCH_ARTWORK","SET_REMOVE_TOGGLE","newFavourites","length","push","index","findIndex","item","id","splice","localStorage","getItem","removeItem","setItem","JSON","stringify","SET_PRODUCT_FAVOURITES","console","log","FETCH_DETAILS"],"mappings":"AAAA,SAASA,WAAT,QAA4B,2BAA5B;AACA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,QAAQ,EAAE,EADQ;AAElBC,EAAAA,aAAa,EAAE,EAFG;AAGlBC,EAAAA,iBAAiB,EAAE,EAHD;AAIlBC,EAAAA,WAAW,EAAE,CAJK;AAKlBC,EAAAA,UAAU,EAAE,CALM;AAMlBC,EAAAA,SAAS,EAAE;AANO,CAApB,C,CASA;;AACA,OAAO,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGR,WAAT,EAAsB;AAAES,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAtB,KAA4C;AACzE,UAAQD,IAAR;AACE,SAAKV,WAAW,CAACY,cAAjB;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYP,QAAAA,QAAQ,EAAES;AAAtB,OAAP;;AACA,SAAKX,WAAW,CAACa,oBAAjB;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAYH,QAAAA,UAAU,EAAEK,OAAO,CAACG,UAAR,CAAmBC,WAA3C;AAAwDV,QAAAA,WAAW,EAAEM,OAAO,CAACG,UAAR,CAAmBE;AAAxF,OAAP;;AACF,SAAKhB,WAAW,CAACiB,cAAjB;AACE,aAAO,EAAE,GAAGR,KAAL;AAAYF,QAAAA,SAAS,EAAEI;AAAvB,OAAP;;AACF,SAAKX,WAAW,CAACkB,kBAAjB;AACE,aAAO,EAAE,GAAGT,KAAL;AAAYU,QAAAA,WAAW,EAAER;AAAzB,OAAP;;AACF,SAAKX,WAAW,CAACoB,YAAjB;AACE,aAAO,EAAE,GAAGX,KAAL;AAAYP,QAAAA,QAAQ,EAAES;AAAtB,OAAP;;AACF,SAAKX,WAAW,CAACqB,cAAjB;AACE,aAAO,EAAE,GAAGZ,KAAL;AAAYP,QAAAA,QAAQ,EAAES;AAAtB,OAAP;;AACF,SAAKX,WAAW,CAACsB,iBAAjB;AACE,UAAIC,aAAa,GAAG,CAAC,GAAGd,KAAK,CAACL,iBAAV,CAApB;;AACA,UAAGmB,aAAa,CAACC,MAAd,IAAwB,CAA3B,EAA8B;AAC5BD,QAAAA,aAAa,CAACE,IAAd,CAAmBd,OAAnB;AACD,OAFD,MAEO;AACL,YAAIe,KAAK,GAAGH,aAAa,CAACI,SAAd,CAAwBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYlB,OAAO,CAACkB,EAApD,CAAZ;;AACA,YAAIH,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdH,UAAAA,aAAa,CAACO,MAAd,CAAqBJ,KAArB,EAA4B,CAA5B;AACH,SAFD,MAEO;AACHH,UAAAA,aAAa,CAACE,IAAd,CAAmBd,OAAnB;AACH;AACF;;AACD,UAAGoB,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAH,EAA8C;AAC5CD,QAAAA,YAAY,CAACE,UAAb,CAAwB,mBAAxB;AACD;;AACDF,MAAAA,YAAY,CAACG,OAAb,CAAqB,mBAArB,EAA0CC,IAAI,CAACC,SAAL,CAAeb,aAAf,CAA1C;AACA,aAAO,EAAE,GAAGd,KAAL;AAAYL,QAAAA,iBAAiB,EAAEmB;AAA/B,OAAP;;AACF,SAAKvB,WAAW,CAACqC,sBAAjB;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY5B,OAAZ;AACA,aAAO,EAAE,GAAGF,KAAL;AAAYL,QAAAA,iBAAiB,EAAEO;AAA/B,OAAP;;AACF,SAAKX,WAAW,CAACwC,aAAjB;AACE,aAAO,EAAE,GAAG/B,KAAL;AAAYN,QAAAA,aAAa,EAAEQ;AAA3B,OAAP;;AACJ;AACE,aAAOF,KAAP;AApCJ;AAsCD,CAvCM","sourcesContent":["import { ActionTypes } from \"../constants/action-types\";\nconst intialState = {\n  products: [],\n  productDetail: [],\n  productFavourites: [],\n  currentPage: 1,\n  totalPages: 1,\n  pageLimit: 25\n};\n\n//My Setters for Products/Art\nexport const productsReducer = (state = intialState, { type, payload }) => {\n  switch (type) {\n    case ActionTypes.FETCH_PRODUCTS:\n      return { ...state, products: payload };\n      case ActionTypes.RECEIVE_ARTWORK_PAGE:\n        return { ...state, totalPages: payload.pagination.total_pages, currentPage: payload.pagination.current_page };\n      case ActionTypes.SET_PAGE_LIMIT:\n        return { ...state, pageLimit: payload };\n      case ActionTypes.FETCH_PRODUCT_META:\n        return { ...state, productMeta: payload };\n      case ActionTypes.SET_PRODUCTS:\n        return { ...state, products: payload };\n      case ActionTypes.SEARCH_ARTWORK:\n        return { ...state, products: payload};\n      case ActionTypes.SET_REMOVE_TOGGLE:\n        let newFavourites = [...state.productFavourites];\n        if(newFavourites.length == 0) { \n          newFavourites.push(payload);\n        } else { \n          let index = newFavourites.findIndex(item => item.id === payload.id);\n          if (index !== -1) {\n              newFavourites.splice(index, 1);\n          } else {\n              newFavourites.push(payload);\n          }\n        }\n        if(localStorage.getItem(\"productFavourites\")) { \n          localStorage.removeItem(\"productFavourites\")\n        }\n        localStorage.setItem(\"productFavourites\", JSON.stringify(newFavourites));\n        return { ...state, productFavourites: newFavourites };\n      case ActionTypes.SET_PRODUCT_FAVOURITES:\n        console.log(payload)\n        return { ...state, productFavourites: payload};\n      case ActionTypes.FETCH_DETAILS:\n        return { ...state, productDetail: payload};\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}