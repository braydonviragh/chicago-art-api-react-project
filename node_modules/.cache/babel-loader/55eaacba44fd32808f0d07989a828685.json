{"ast":null,"code":"var _jsxFileName = \"/Users/braydonviragh/Sites/personal/React_Redux_Tutorial/src/containers/Pagination.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const paginationInfo = useSelector(state => ({\n    currentPage: state.allProducts.currentPage,\n    totalPages: state.allProducts.totalPages,\n    pageLimit: state.allProducts.pageLimit\n  }));\n  const {\n    currentPage,\n    totalPages,\n    pageLimit\n  } = paginationInfo;\n\n  const handlePageChange = page => {\n    dispatch(fetchProducts(page));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"pagination-info\",\n      children: [\"Page \", currentPage, \" of \", totalPages]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-controls\",\n      children: [currentPage > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage - 1),\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), currentPage < totalPages && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage + 1),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Pagination, \"tNiJOuc2p+ofEtXx3MS0t3EXl9c=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/Users/braydonviragh/Sites/personal/React_Redux_Tutorial/src/containers/Pagination.js"],"names":["React","useDispatch","useSelector","Pagination","dispatch","paginationInfo","state","currentPage","allProducts","totalPages","pageLimit","handlePageChange","page","fetchProducts"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,cAAc,GAAGH,WAAW,CAAEI,KAAD,KAAY;AAC7CC,IAAAA,WAAW,EAAED,KAAK,CAACE,WAAN,CAAkBD,WADc;AAE7CE,IAAAA,UAAU,EAAEH,KAAK,CAACE,WAAN,CAAkBC,UAFe;AAG7CC,IAAAA,SAAS,EAAEJ,KAAK,CAACE,WAAN,CAAkBE;AAHgB,GAAZ,CAAD,CAAlC;AAMA,QAAM;AAAEH,IAAAA,WAAF;AAAeE,IAAAA,UAAf;AAA2BC,IAAAA;AAA3B,MAAyCL,cAA/C;;AACA,QAAMM,gBAAgB,GAAIC,IAAD,IAAU;AACjCR,IAAAA,QAAQ,CAACS,aAAa,CAACD,IAAD,CAAd,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,4BACE;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA,0BACQL,WADR,UACyBE,UADzB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,iBACGF,WAAW,GAAG,CAAd,iBACC;AAAQ,QAAA,OAAO,EAAE,MAAMI,gBAAgB,CAACJ,WAAW,GAAG,CAAf,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAMGA,WAAW,GAAGE,UAAd,iBACC;AAAQ,QAAA,OAAO,EAAE,MAAME,gBAAgB,CAACJ,WAAW,GAAG,CAAf,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAhCD;;GAAMJ,U;UACaF,W,EACMC,W;;;KAFnBC,U;AAkCN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst Pagination = () => {\n  const dispatch = useDispatch();\n  const paginationInfo = useSelector((state) => ({\n    currentPage: state.allProducts.currentPage,\n    totalPages: state.allProducts.totalPages,\n    pageLimit: state.allProducts.pageLimit,\n  }));\n\n  const { currentPage, totalPages, pageLimit } = paginationInfo;\n  const handlePageChange = (page) => {\n    dispatch(fetchProducts(page));\n  };\n\n  return (\n    <div className=\"pagination-container\">\n      <p className=\"pagination-info\">\n        Page {currentPage} of {totalPages}\n      </p>\n      <div className=\"pagination-controls\">\n        {currentPage > 1 && (\n          <button onClick={() => handlePageChange(currentPage - 1)}>\n            Previous\n          </button>\n        )}\n        {currentPage < totalPages && (\n          <button onClick={() => handlePageChange(currentPage + 1)}>\n            Next\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}